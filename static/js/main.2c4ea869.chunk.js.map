{"version":3,"sources":["components/Footer.js","components/Search.js","components/Data.js","components/MapLocation.js","components/Header.js","GlobalStyles.js","App.js","index.js"],"names":["FooterStyled","styled","div","Footer","href","SearchStyled","Serach","handlerSearch","searchString","onClick","onKeyDown","e","code","onChange","value","placeholder","type","src","alt","DataStyled","Data","data","ip","location","isp","city","region","timezone","MapLocationStyled","MapLocation","position","customIcon","Icon","iconUrl","MapContainer","center","zoom","scrollWheelZoom","zoomControl","TileLayer","attribution","url","ZoomControl","zoomInText","zoomOutText","Marker","icon","Popup","HeaderStyled","Header","title","useState","setData","cords","setCords","setSearchString","useEffect","fetch","then","response","json","lat","lng","target","catch","err","console","log","GlobalStyles","createGlobalStyle","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c4ea869.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst FooterStyled = styled.div`\r\nposition:absolute;\r\nbottom:0;\r\nleft:0;\r\nright:0;\r\nfont-size: 11px; \r\ntext-align: center;\r\n    a{\r\n        color: hsl(228, 45%, 44%);\r\n    }\r\n`\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <FooterStyled>\r\n            Challenge by <a href=\"https://github.com/911harm/ip-tracker-react\">Frontend Mentor</a>.\r\n            Coded by <a href=\"https://github.com/911harm\">911harm</a>.\r\n        </FooterStyled>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n// import arrow from '../../public/images/icon-arrow.svg'\r\nconst SearchStyled = styled.div`\r\npadding:10px 0;\r\nmax-width:600px;\r\nmargin:auto;\r\n    input{\r\n        outline: 0;\r\n        width:70%;\r\n        padding:10px;\r\n        border-radius:10px;\r\n        height:30px;\r\n        border:none;\r\n        text-align: initial;\r\n        cursor:pointer;\r\n\r\n    }\r\n    button{\r\n        cursor:pointer;\r\n        outline: 0;\r\n        color:white;\r\n        background: black;\r\n        padding:10px;\r\n        height:30px;\r\n        width: 50px;\r\n        border-radius: 0 10px 10px 0;\r\n        border:none;\r\n        top:3px;\r\n        position: relative;\r\n        left: -15px;\r\n        margin:0;\r\n            img{\r\n                display: inline-block;\r\n                width: 8px;\r\n                margin: 0;\r\n                padding: 0;\r\n            }\r\n\r\n    }\r\n`\r\n\r\nexport default function Serach({ handlerSearch, searchString, onClick }) {\r\n    const handlerEnter = (e) => {\r\n        if(e.code===\"Enter\"){\r\n            onClick();\r\n        }\r\n    }\r\n    return (\r\n        <SearchStyled>\r\n            <input onKeyDown={handlerEnter} onChange={handlerSearch} value={searchString} placeholder=\"Search for any IP address or domain\" type=\"text\" />\r\n            <button onClick={onClick} >\r\n                <img src=\"./images/icon-arrow.svg\" alt=\"buscar\" />\r\n            </button>\r\n        </SearchStyled>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst DataStyled = styled.div`\r\n width:80%;\r\n margin:auto;\r\n height:250px;\r\n background:white;\r\n border-radius:10px;\r\n padding:10px;\r\n box-shadow: 1px 1px 2px 0px black;\r\n    ul{\r\n        list-style:none;\r\n        padding:0;\r\n        width: 95%;\r\n        margin: auto;\r\n        li{\r\n            display:block;\r\n            h3{\r\n                margin-top:3px;\r\n                text-transform:uppercase;\r\n                font-size:10px;\r\n                font-weight:400;\r\n                color:#333;\r\n            }\r\n            p{  margin-top:0px;\r\n                margin-bottom:15px;\r\n                // margin: 0.5em 0;\r\n                font-weight:700;\r\n            }\r\n        }\r\n    }\r\n    @media screen and (min-width:500px){\r\n        width:80%;\r\n        height:30vh;\r\n        max-height:150px;\r\n        display:flex;\r\n        justify-content: center;\r\n        ul{\r\n            width: 95%;\r\n            align-self:center;\r\n            display:flex;\r\n            padding: 10px;\r\n            justify-content: space-around;\r\n            li{\r\n                h3{\r\n                    text-align: initial;\r\n                    margin:0;\r\n                }\r\n                border-right:1px solid black;\r\n                padding-right: 20px;\r\n                &:last-child{\r\n                    border:none;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n`\r\n\r\nexport default function Data({ data }) {\r\n    const { ip, location, isp } = data\r\n    return (\r\n        <DataStyled>\r\n            <ul>\r\n                <li>\r\n                    <h3>IP Address</h3>\r\n                    <p>{ip}</p>\r\n                </li>\r\n                <li>\r\n                    <h3>Location </h3>\r\n                    <p>{location.city}, {location.region}</p>\r\n                </li>\r\n                <li>\r\n                    <h3>Timezone</h3>\r\n                    <p>UTC{location.timezone}</p>\r\n                </li>\r\n                <li>\r\n                    <h3>ISP</h3>\r\n                    <p>{isp}</p>\r\n                </li>\r\n            </ul>\r\n            {/* add offset value dynamically using the API  */}\r\n        </DataStyled>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { MapContainer, TileLayer, Marker, Popup, ZoomControl } from 'react-leaflet';\r\nimport { Icon } from 'leaflet'\r\n\r\nconst MapLocationStyled = styled.div`\r\nz-index: -1;\r\n width:100%;\r\n height:70vh;\r\n border: 1px solid black;\r\n position: relative;\r\n top: -127px;\r\n \r\n left:0px;\r\n right:0px;\r\n .leaflet-container{\r\n     width:100%;\r\n     height:100%;\r\n }\r\n @media screen and (min-width:500px){\r\n    top:-46px;\r\n }\r\n`\r\nexport default function MapLocation({ position }) {\r\n    let customIcon = new Icon({\r\n        iconUrl:\"./images/icon-location.svg\" \r\n    });\r\n\r\n    return (\r\n        <MapLocationStyled>\r\n            <MapContainer center={position} zoom={12} scrollWheelZoom={true} zoomControl={false} >\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <ZoomControl position={\"bottomright\"} zoomInText={\"ðŸ‘€\"} zoomOutText={\"-\"} />\r\n                <Marker position={position} icon={customIcon}>\r\n                    <Popup>\r\n                        You Location\r\n                     </Popup>\r\n                </Marker>\r\n            </MapContainer>\r\n        </MapLocationStyled>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Search from './Search';\r\nimport Data from './Data';\r\nimport MapLocation from './MapLocation';\r\n\r\nconst HeaderStyled = styled.div`\r\nbackground-image: url(\"./images/pattern-bg.png\");\r\nwidth: 100%;\r\nheight:200px;\r\n/* padding:20px; */\r\n    h1{\r\n        font-size: 20px;\r\n        margin:0;\r\n        color:white;\r\n        align-self:center;\r\n        font-weight:400;\r\n    }\r\n`\r\n\r\nexport default function Header({ title }) {\r\n    const dummy = {\r\n        ip: \"0.0.0.0\",\r\n        isp: \"Unknown\",\r\n        location: {\r\n            city: \"Unknown\",\r\n            region: \"Unknown\",\r\n            timezone: \"Unknown\"\r\n        }\r\n    }\r\n    const [data, setData] = useState(dummy)\r\n    const [cords, setCords] = useState(null)\r\n    const [searchString, setSearchString] = useState(data.ip)\r\n\r\n    useEffect(() => {\r\n        fetch('https://geo.ipify.org/api/v1?apiKey=at_oOhIBWtFLKXwQfDmjfqmVU3VXNkZw')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setData(data)\r\n                setSearchString(data.ip)\r\n                setCords([data.location.lat, data.location.lng])\r\n            });\r\n    }, [])\r\n\r\n    const handlerSearch = (e) => {\r\n        setSearchString(e.target.value)\r\n\r\n    }\r\n    const btnSearch = () => {\r\n        fetch(`https://geo.ipify.org/api/v1?apiKey=at_oOhIBWtFLKXwQfDmjfqmVU3VXNkZw&ipAddress=${searchString}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.code === 422) {\r\n                    return setCords(null)\r\n                }\r\n                setData(data)\r\n                setSearchString(data.ip)\r\n                setCords(null)\r\n                setCords([data.location.lat, data.location.lng])\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <HeaderStyled>\r\n            <h1>{title}</h1>\r\n            <Search handlerSearch={handlerSearch} searchString={searchString} onClick={btnSearch} />\r\n            <Data data={data}></Data>\r\n            {cords\r\n                ? <MapLocation position={cords}></MapLocation>\r\n                : <div>...Check the IP</div>\r\n            }\r\n        </HeaderStyled>\r\n    )\r\n}","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    *{\r\n        box-sizing:border-box;\r\n        text-align:center;\r\n        \r\n    }\r\n    body{\r\n        font-family: 'Rubik', sans-serif;\r\n        margin:0;\r\n        padding:0\r\n        \r\n    }\r\n \r\n`\r\n\r\nexport default GlobalStyles;\r\n\r\n","import React from 'react';\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport GlobalStyles from './GlobalStyles';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header title={\"IP Address Tracker\"}></Header>\n      <Footer></Footer>\n      <GlobalStyles />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}